-- phpMyAdmin SQL Dump
-- version 4.9.5deb2
-- https://www.phpmyadmin.net/
--
-- Host: localhost:3306
-- Generation Time: Feb 03, 2023 at 06:51 PM
-- Server version: 8.0.32-0ubuntu0.20.04.2
-- PHP Version: 7.4.32

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `test_blog`
--

-- --------------------------------------------------------

--
-- Table structure for table `articles`
--

CREATE TABLE `articles` (
  `id` int NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `text` text,
  `categorie_id` int DEFAULT NULL,
  `pubdate` datetime NOT NULL,
  `views` int NOT NULL DEFAULT '0',
  `img` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Dumping data for table `articles`
--

INSERT INTO `articles` (`id`, `title`, `text`, `categorie_id`, `pubdate`, `views`, `img`) VALUES
(1, 'Twitter’s relationship with developers has fallen apart', 'The already strained relationship between Twitter and developers has now completely fallen apart.\r\n\r\nOver the years, Twitter has made a series of decisions that damaged its relationship with developers.\r\n\r\nIn 2012, Twitter limited the number of active tokens an app can have—essentially putting a cap on how successful a third-party app can become. A number of apps kicked the bucket after that decision.\r\n\r\nIncreasingly strict rate limits on things such as retweets and likes put further pressure on Twitter’s developer community.\r\n\r\nKilling off push notifications and putting streaming connections behind the Account Activity API – that app developers say they would need to charge over $16 per user just to break even – led to apps like Tweetbot, Talon, and Tweetings having to remove popular features.\r\n\r\nFor example, here was Tweetbot’s changelog after that API decision:\r\n\r\nTimeline streaming on Wi-Fi is now disabled. Your timelines will now refresh automatically every 1-2 minutes instead.\r\nPush notifications for Mentions and Direct Mentions will now be delayed by a few minutes.\r\nPush notifications for Likes, Retweets, Follows and Quotes have been disabled. We’ll be investigating [bringing] some of these back in the future.\r\nActivity and Stats tabs have been removed.\r\n[Apple] Watch app, which depended heavily on Activity data, has been removed.\r\nAll of these hostile decisions were clearly designed to drive users towards Twitter’s official app which could offer more features.\r\n\r\nTwitter co-founder Jack Dorsey returned to the helm of the company in 2015 after stepping down as CEO in 2008. During the Twitter Flight conference in 2015, Dorsey made a bold promise to developers.\r\n\r\n“Somewhere along the line, our relationship with developers got complicated, confusing, unpredictable,” said Dorsey. “We want to apologise, reboot, and have a great relationship with developers. Open, honest, and fulfilling.”\r\n\r\nIn November 2021, Dorsey once again stepped down from Twitter to focus on his role as CEO of Block and his wider blockchain evangelism. While the relationship between Twitter and developers didn’t substantially deteriorate further during Dorsey’s tenure after his 2015 comments, it didn’t really improve either.\r\n\r\nNow we’re in a new era for Twitter under Elon Musk’s leadership. Over a relatively short period, it has been nothing short of chaotic.\r\n\r\nMusk’s wider policy decisions have led to a surge in adoption of alternatives like Mastodon. The decentralised platform is far more developer-friendly and developers like Tweetbot-maker Tapbots have begun work on their own Mastodon clients.\r\n\r\nLast week, all the major third-party Twitter apps broke. The developers of the respective apps complained they heard no explanation from Twitter for over 24 hours:', 1, '2023-01-17 18:22:41', 2, 'crab.jpg'),
(2, 'Chromium will support third-party Rust libraries\r\n', 'Google has announced that it will allow third-party Rust libraries in its Chromium open-source browser project.\r\n\r\nChrome security team member Dana Jansens published a blog post on Thursday announcing the decision.\r\n\r\nJansens says that Google is now actively pursuing adding a production Rust toolchain to its build system.\r\n\r\n“Our goal in bringing Rust into Chromium is to provide a simpler (no IPC) and safer (less complex C++ overall, no memory safety bugs in a sandbox either) way to satisfy the rule of two, in order to speed up development (less code to write, less design docs, less security review) and improve the security (increasing the number of lines of code without memory safety bugs, decreasing the bug density of code) of Chrome,” explains Jansens.\r\n\r\n“We believe that we can use third-party Rust libraries to work toward this goal.”\r\n\r\nAround 70 percent of the serious security bugs in Chromium are memory safety problems. When written correctly, Rust can be used to avoid memory safety issues.\r\n\r\n“Rust guarantees temporal memory safety with static analysis that relies on two inputs: lifetimes (inferred or explicitly written) and exclusive mutability,” Jansens explained.\r\n\r\nThird-party Rust libraries will only be allowed if there “is a business need”. Google says that includes where:\r\n\r\nThe Rust implementation is the best (e.g., speed, memory, lack of bugs) or the only existing implementation available for the third-party library.\r\nThe Rust implementation allows the operation to move to a higher privileged process, and this benefits the product by improving on guardrail metrics (e.g. through avoiding process startup, IPC overheads, or C++ memory-unsafety mitigations).\r\nThe Rust implementation can meaningfully reduce our expected risk of (memory/crashes/undefined behaviour) bugs when compared to the existing third-party library and related C++ code required to use the library.\r\nGoogle plans to introduce the Rust toolchain and allow libraries written in the language within the next year.\r\n\r\nWant to learn more about cybersecurity and the cloud from industry leaders? Check out Cyber Security & Cloud Expo taking place in Amsterdam, California, and London.\r\n\r\nExplore other upcoming enterprise technology events and webinars powered by TechForge here.\r\n\r\nTags: chromium, google, libraries, memory safety, rust', 2, '2023-01-17 18:29:17', 19, 'phone.jpeg'),
(3, 'Apple to provide more details about why it delists apps', 'Apple plans to be more transparent about why it delists certain apps.\r\n\r\nDevelopers must abide by Apple’s strict App Store rules or face the banhammer. Some of these removals are due to clear policy violations while others are wrapped in a shroud of mystery.\r\n\r\nLast March, around one-third of shareholders at Apple’s annual meeting backed a resolution that called on the firm to be more transparent about the apps it removes.\r\n\r\nThe root of the concern is Apple’s apparent willingness to appease foreign governments.\r\n\r\nFor example, at the request of Beijing, apps for publications like the New York Times, encrypted messaging apps WhatsApp and Signal, and numerous social media apps are banned from the App Store in China.\r\n\r\nApple has published a biannual ‘Transparency Report’ since 2018 (although it missed H2 2021 and published no reports in 2022). The reports provide information on how many requests it’s received from governments, and the type, but does not provide any reasoning.\r\n\r\nIn H1 2021, the most recent report, Beijing asked for 89 apps to be removed. Apple complied with all of the requests. Activists are concerned that the current process doesn’t allow for any scrutiny of the reasoning.\r\n\r\nAccording to British ethical investment platform Tulipshare, a key petitioner, Apple has agreed to start publishing the legal basis for the removals. This increased transparency will reportedly begin with Apple’s next report.\r\n\r\nTulipshare believes the new details will help determine whether Apple’s decisions are legitimate or stifling freedom of speech and information.\r\n\r\nOutside of government requests, Apple will also start disclosing how many apps it decides to remove for violating App Store or developer license agreement guidelines.\r\n\r\n(Photo by Mohamed M on Unsplash)\r\n\r\nLooking to revamp your digital transformation strategy? Learn more about Digital Transformation Week taking place in Amsterdam, California, and London.\r\n\r\nExplore other upcoming enterprise technology events and webinars powered by TechForge here.\r\n\r\nTags: app store, apple, report, transparency', 3, '2023-01-17 18:29:57', 26, 'pp.jpeg'),
(4, 'Google’s smart TV platforms reach 150M active devices', 'At CES 2023, Google provided an update on the state of its smart TV platforms.\r\n\r\nOver 150 million Android TV and Google TV-powered devices are now being watched each month—and that number is growing rapidly.\r\n\r\nIn January 2022, Google said that its TV platforms had around 110 million active devices per month. By adding over 40 million devices over the course of the year, Google and its TV partners have boosted the size of the ecosystem by around 35 percent.\r\n\r\nThe growing popularity of TV brands that use Google’s platforms (especially TCL, Hisense, and Sony) has driven this growth. During this year’s CES, where it announced its 2023 lineup, TCL said that it’s now the top Google TV brand globally.\r\n\r\nFor regular travellers and users of TVs that don’t have the platform built-in, the revamped ‘Chromecast with Google TV’ has also proven to be a popular option. The relatively inexpensive streaming device was likely under quite a few Christmas trees last month to give a nice end-of-year boost to Google TV’s active users.\r\n\r\nThe growing success of Google’s smart TV platforms is a great opportunity for developers. If you’re looking to get started, you can use the Android Emulator for TV. Alternatively, Android TV 13 was released on 2 December 2022 for the ADT-3 development kit.\r\n\r\nGoogle has made its fair share of missteps with its TV efforts since launching in 2020 but, fortunately, they appear to be a thing of the past. \r\n\r\n(Photo by Victor Carvalho on Unsplash)\r\n\r\nWant to learn about the IoT from industry leaders? Check out IoT Tech Expo taking place in Amsterdam, California, and London. The event is co-located with Digital Transformation Week.\r\n\r\nTags: adt-3, android, android tv, google, google tv, smart tv', 4, '2023-01-17 18:30:59', 1, 'thumb.jpeg'),
(5, 'Apple is working on supporting App Store alternatives', 'Apple is working on allowing App Store alternatives due to legislation that forces its hand.\r\n\r\nThe EU introduced the Digital Markets Act in November which requires “gatekeeper” companies to open their platforms to other companies and developers. Apple has until 6 March 2024 to comply with the act by supporting the sideloading of apps on iPhones and iPads.\r\n\r\nSimilar legislation is being considered in the US and other regions.\r\n\r\nGoogle has managed to avoid facing the same degree of monopoly accusations about its own mobile app store due to offering developers and users more flexibility on Android. While the Play Store is recommended by Google, the company allows the sideloading of third-party app stores and apps.\r\n\r\nApple maintains that its tight grip on its platform is to protect users.\r\n\r\nIn a letter to lawmakers earlier this year, Apple responded to cybersecurity expert Bruce Schneier who said that Apple’s concerns about sideloading were “unfounded”.\r\n\r\nIn the response, Apple acknowledged that state-sponsored hackers could get through security controls. However, the company said that such attacks are a “rare threat” while there is “ample evidence showing third-party app stores are a key malware vector on platforms which support such stores.”\r\n\r\nCritics believe Apple is more concerned about protecting the over $85 billion that users spend on the App Store every year by not allowing sideloading or the use of alternative payment systems.\r\n\r\nUntil recently, Apple took a 30 percent commission on all app sales. Most app developers feel the cut is unjustifiable and critics believe that it’s an abuse of Apple’s market dominance. iOS developers have been forced to inflate their prices to compensate for Apple’s cut.\r\n\r\nThe fundamental problem for us is the lack of choice,” wrote Basecamp CEO Jason Fried in a letter last year. “And Phil Schiller’s suggestion that we should raise prices on iOS customers to make up for Apple’s added margin is antitrust gold.”\r\n\r\nHowever, if Apple is found to violate the EU’s Digital Markets Act then it could face a fine as high as $80 billion.\r\n\r\nApple’s engineers are reportedly working on a system that is similar to Mac’s verification for apps that are installed outside of the Mac App Store.\r\n\r\nIn addition to allowing the sideloading of apps and store, Apple may be forced to break down more of its infamous walled garden to allow alternative payment systems, third-party ‘Find My’ integration, and more.\r\n\r\nA separate investigation by Germany’s competition watchdog, the Bundeskartellamt, is probing not just the App Store but Apple’s other services.\r\n\r\n“In addition to manufacturing various hardware products, the tech company also offers the ‌App Store‌, iCloud, AppleCare, Apple Music, Apple Arcade, Apple TV+ as well as other services as part of its services business,” explained Andreas Mundt, President of the Bundeskartellamt.\r\n\r\n“Besides assessing the company’s position in these areas, we will, among other aspects, examine its extensive integration across several market levels, the magnitude of its technological and financial resources and its access to data.”\r\n\r\nApple’s changes to comply with the Digital Markets Act are set to be introduced with iOS 17 in 2023. However, Bloomberg reports that Apple employees have warned it could impact other new features that were planned for the update.\r\n\r\n(Photo by Mick Haupt on Unsplash)\r\n\r\nRelated: Apple begins Small Developer Assistance Fund payouts\r\n\r\nLooking to revamp your digital transformation strategy? Learn more about Digital Transformation Week taking place in Amsterdam, California, and London.\r\n\r\nExplore other upcoming enterprise technology events and webinars powered by TechForge here.\r\n\r\nTags: app store, apple, digital markets act, eu, ios, law, legal, policy, sideloading', 3, '2023-01-20 14:12:46', 59, 'photo.jpeg'),
(6, '10 best practices to get the most out of test automation', 'Have you tried eating nuts in the shell? If yes, I guess it was not a very successful experience. Although everyone knows that nuts are very healthy and nutritious. Paradoxically, many companies implement test automation without looking at the nuances. Everyone knows that it is good for business (just like nuts for our body!). However, if you do not follow certain approaches, you can lose some of the benefits of automation. To avoid this, we have collected 10 best practices for test automation. \r\n\r\nPractice №1. Combine manual and automated testing \r\nEverything is good in moderation. Automation included. Many tests are performed only manually and there is no point in automating them for several reasons. Firstly, scripts cannot always simulate human behavior and human reactions. Secondly, if the test is planned to be run only once, there is no point in writing an automated script for it.\r\n\r\nAt the same time, some tests are ideal for automation, and here is a list:\r\n\r\ntests that require repetitive actions;\r\ntests that involve huge amounts of data;\r\ntests with high chances of human error;\r\ntests to run on different versions of browsers, operating systems, hardware, firmware, and combinations of all of the above;\r\ntests that cover frequently used functionality.\r\nPractice №2. Pay special attention to regression tests\r\nRegression tests are tests that are carried out after adding new functionality. These tests aim to check whether existing functions work correctly. Regression tests are repeated, so it is convenient to automate them and run them over and over again. Experienced QA automation engineers advise adding in regression test suite smoke tests, sanity tests, and test cases for finding defects in previous test cycles.\r\n\r\nPractice №3. Include end-to-end testing\r\nEnd-to-end (E2E) testing ensures that the application behaves according to the requirements and works correctly with all kinds of user tasks. This type of testing is based on the end users’ perspective and simulates their interaction with the application in real-world conditions. E2E testing speeds up release time as you automate critical user journeys, find bugs quickly and fix them immediately.\r\n\r\nPractice №4. Provide collective ownership for automated tests\r\nCollective ownership gives rise to collective responsibility. You avoid a situation where one person is responsible for creating scripts, running tests, and maintaining them. The described scenario slows down the work of the team and does not allow you to quickly make changes to the code. In addition, when all automation is tied to one team member, there is a high risk that all processes will completely pause if a person, for example, falls ill or quits the company suddenly.\r\n\r\nThe success of test automation in any particular organization depends on how well the QA team works. When each of its members is aware of the current stage of testing on the project, they make their contribution to the process. Moreover, sharing test scripts allows the most qualified QA engineers to share their knowledge and skills with other colleagues. In addition, collective work on automated tests ensures that the testing process is transparent and that all stakeholders are aware of its status.\r\n\r\nPractice №5. Plan in detail all processes related to testing\r\nSuccessful automation is impossible without a strategy, and at the heart of any strategy is planning. Plan which tests and how many times will be run at each stage of development. Plan to fix not only failed tests but also the root causes of failures. Plan retrospectives meetings that allow the team to understand the essence of the mistakes made and prevent them in the future.\r\n\r\nPractice №6. Choose the automation tools that suit your needs\r\nTest automation management tools directly affect the quality of the entire automation process. The toolset that QA teams use in their work includes software for writing test scripts, running tests, preparing reports, analytics, tracking and fixing bugs, and tools for team communication. All of them should integrate well with each other and work smoothly without introducing confusion into the process.\r\n\r\nThe most convenient option in terms of organizing the entire testing process is the test automation management platform. Among the most famous platforms are Katalon, LambdaTest, Perfecto, Zebrunner, and others.\r\n\r\nPractice №7. Track automation progress by comparing expected results with actual \r\nDon’t forget to set metrics for expected outcomes: what types of tests you plan to automate, how much time you plan to spend writing scripts, running tests, fixing bugs, and retesting, and what test coverage you expect, how many hours you allocate to automation, and what an approximate budget. After several sprints, compare the expected results with the real ones and analyze the discrepancies. This will allow you to understand where your automation efforts are effective, and where you have not yet achieved the expected results. At the next stage of the project, adjust your testing strategy to achieve maximum efficiency.\r\n\r\nPractice №8. Keep a balance between emulators, simulators, and real devices\r\nMobile and desktop applications can be tested on real and virtual devices. Both approaches have their pros and cons. \r\n\r\nThe advantages of testing on virtual devices are that it is free and available to all companies, and is also suitable for functional testing. As for the disadvantages, the most significant ones are the inability to emulate real-time data. You will not be able to test through virtual devices how the application will be affected by low battery, poor network quality, GPS, and interaction with various sensors and widgets.\r\n\r\nTesting on real devices solves this problem: you can test your product on the devices that your end-user has and fix all bugs in time. The disadvantage of real device testing is the high cost. You need to either buy all the necessary devices and then regularly spend money on their maintenance or rent devices in special device farms. The latter option is more sustainable because it allows you to pay only for the time of using a particular device and not think about the cost of maintaining it.\r\n\r\nWe recommend testing the application both on virtual and real devices. This ensures maximum product quality and a rational approach to the project budget.\r\n\r\nPractice №9. Run tests from the early cycles of software development\r\nThe sooner you start testing, the sooner you find critical bugs, and the more time you have to effectively eliminate them. With each new sprint, you test new functionality, and its interaction with the entire application, pay attention to the usability of the user interface and eliminate all possible problems in the application. Another benefit of early testing is that the earlier a bug is found, the easier it is to fix. Ultimately, this saves project time and money.\r\n\r\nPractice №10. Maintain all tests up to date\r\nWith automation, you achieve the highest possible test coverage. However, flaky and outdated tests reduce this advantage to zero. Weak tests give false positive and false negative results, increase the time for analysis and elimination of errors and lead to the release of the application of inadequate quality. Outdated tests do not cover new functionality and, accordingly, miss bugs, which also reflects badly on the quality of the product.\r\n\r\nExperienced QA engineers advise, firstly, to remove unstable tests from regression packages. Secondly, you need to plan the process of running any tests and make sure that each test in the suite is up to date.\r\n\r\nEditor’s note: This article is in association with Zebrunner.\r\n\r\nTags: automation, best practices, end-to-end testing, software testing, Testing', 2, '2023-01-19 14:14:56', 1, 'best.png'),
(7, 'SFC urges developers to quit GitHub', 'The SFC (Software Freedom Conservancy) has quit GitHub and urges other developers to follow.\r\n\r\nSFC is a non-profit that aims to provide a home and services to Free, Libre, and Open Source Software (FLOSS) projects.\r\n\r\nOn Thursday, the SFC posted a blog post criticising the dominant role that GitHub has established in FOSS development.\r\n\r\nIn the post, Bradley Kuhn, SFC policy fellow, and Denver Gingerich, SFC FOSS license compliance engineer, highlighted the dangers of such market dominance.\r\n\r\nKuhn and Gingerich pointed at how SourceForge, the most popular code hosting site twenty-one years ago, proprietarised all its code.\r\n\r\nMajor FOSS projects ended up leaving SourceForge since it was now a proprietary system and antithetical to FOSS.\r\n\r\n“FOSS communities learned that it was a mistake to allow a for-profit, proprietary software company to become the dominant FOSS collaborative development site,” wrote Kuhn and Gingerich.\r\n\r\n“GitHub succeeded where SourceForge failed: they have convinced us to promote and even aid in the creation of a proprietary system that exploits FOSS.”\r\n\r\nGit, as a technology, was designed to enable distributed software development. GitHub built social and interaction features around it. SFC claims GitHub is now exploiting FOSS and profiting from the creation of proprietary products.\r\n\r\n“We at Software Freedom Conservancy have ourselves been part of the problem; until recently, even we’d become too comfortable, complacent, and complicit with GitHub.\r\n\r\nGiving up GitHub will require work, sacrifice and may take a long time.”\r\n\r\nThe last straw for the SFC appears to have been around GitHub Copilot.\r\n\r\nCopilot turns natural language prompts into coding suggestions across dozens of languages. Following six months of GitHub refusing to answer questions around the moral implications of AI-assisted software, Kuhn published an essay on the subject to raise them publicly.\r\n\r\nThree weeks after, the SFC launched a committee of experts and parallel public discussion. GitHub reportedly ignored an invitation to join. \r\n\r\nFollowing a reminder sent last week of the unanswered questions and refusal to join public discussions, GitHub responded that they won’t join any public or private discussion because “a broader conversation [about the ethics of AI-assisted software] seemed unlikely to alter your [SFC’s] stance, which is why we [GitHub] have not responded to your [SFC’s] detailed questions.”\r\n\r\nSFC had already asked its member projects and community members to avoid GitHub. Now it’s going further and will be assisting any FOSS projects to migrate away from Microsoft’s platform.\r\n\r\nSFC has launched a website, GiveUpGitHub.org, where it’s providing tips, ideas, methods, tools, and support to those that wish to leave GitHub.\r\n\r\n(Photo by DDP on Unsplash)\r\n\r\nLooking to revamp your digital transformation strategy? Learn more about Digital Transformation Week taking place in Amsterdam, California, and London, and discover key strategies for making your digital efforts a success.\r\n\r\nTags: copilot, floss, foss, git, github, open source, sfc, software freedom conservancy', 1, '2023-01-19 14:15:46', 1, 'exit.jpg'),
(8, 'These programming languages were most in-demand in 2021', 'Coding Dojo has released its annual review of the programming language skills most sought after from employers.\r\n\r\nFor its research, Coding Dojo scours jobs listing site Indeed. The company looks at what languages appear most in job descriptions and compares their prevalence with previous years to identify trends that could give you an advantage.\r\n\r\nPython retained its lead in 2021 as the language which cropped up in the most (~70,500) job descriptions. Rounding out the top five is SQL (~69,000), Java (~59,000), R (~56,000), and Visual Basic (~54,000).\r\n\r\nJavaScript had a rough year, dropping to sixth place with around 50,000 job descriptions mentioning the language.\r\n\r\nThe demand for almost all languages dropped when compared to 2020 (when most of the languages observed peaked.)\r\n\r\nFor example, Python – despite retaining its overall lead – dropped from around 74,000 jobs in 2020 to around 70,500 in 2021.\r\n\r\nHowever, the demand for most languages remained above their pre-2020 levels.\r\n\r\nAcross all the languages reviewed by Coding Dojo, only demand for Visual Basic and R grew in 2021 compared to 2020. That was at the aforementioned expense of JavaScript; which got shunted down the rankings.\r\nAnother reason for JavaScript’s reduced demand in 2021 is likely due to the growing demand for TypeScript.\r\n\r\nJonathan Sandals, Content Marketing Strategist at Coding Dojo, wrote in a blog post:\r\n\r\n“While we look at the top languages in the industry, we also look at what’s happening below the surface. And two names came up strong: TypeScript and Kotlin.\r\n\r\nAmong the other languages we check, these two saw a significant rise. Both of them had thousands more jobs than last year, despite the pandemic. They, like Visual Basic and R, seem to be surprisingly benefiting from the pandemic.”\r\n\r\nWhile it looks like demand for programming skills surged amid the pandemic in 2020, it appeared to cool somewhat in 2021.\r\n\r\nDespite ongoing global uncertainties, a gradual return to some degree of normality this year seems to be leading to increasing demand.\r\n\r\nHere are the top 10 programming languages in 2022 (based on the number of open full-time jobs) so far:\r\n\r\nJava: 89,365 jobs (#3 in 2021)\r\nPython: 76,634 (#1)\r\nSQL: 66,981 (#2)\r\nJavascript: 58,947 (#6)\r\nC++: 46,143 (#7)\r\nC#: 43,546 (#8)\r\nC: 40,212 (previously unranked)\r\nGo: 39,048 (previously unranked)\r\nRuby: 14,653 (#10)\r\nAssembly: 11,239 (previously unranked)\r\nMost notable is that top spot, where Java has overtaken Python to outpace it by over 12,000 open positions. JavaScript has managed to climb back up from sixth place to fourth while R and Visual Basic have been kicked back out of the top 10.\r\n\r\nHowever, the most encouraging statistic for the year ahead is that the total available jobs among the top 10 programming languages for full-time programmers has increased six percent from 459,000 in 2021 to 486,500 in 2022.\r\n\r\n(Photo by Max Duzij on Unsplash)', 2, '2023-01-19 14:18:40', 52, 'computer.jpeg'),
(9, '2021 Stack Overflow Survey: React.js takes the web framework crown, Python is in-demand, and devs still love Rust', 'The 2021 edition of Stack Overflow’s developer survey features both substantial changes in the landscape while other elements have remained stubbornly resilient.\r\n\r\nIn a blog post, Stack Overflow’s Ben Popper and David Gibson wrote:\r\n\r\n“This year’s survey was a little different than ones in years past. We opened our 2020 survey in February, and by the time we got around to publishing the results, the reality of work and daily life had shifted dramatically for people around the globe.\r\n\r\nThe pandemic continues to exert a strong influence on the shape of our economy and society, so we tried to keep this year’s survey shorter and focused on things outside the traditional office.”\r\n\r\nSo, with that in mind, to the findings…\r\n\r\nOne of the highlights from this year’s report is that React.js (40.14%) has overtaken jQuery (34.42%) to become the most-used web framework. Completing the top five are Express (23.82%), Angular (22.96%), and Vue.js (18.97%).\r\n\r\nReact.js (25.12%) also leads the most-wanted web frameworks, followed by Vue.js (16.69%), Django (9.21%), Angular (8.47%), and Svelte (6.57%).\r\n\r\nAlthough it just makes the top five most-wanted, Svelte (71.47%) is tied with ASP.NET Core as the most-loved web framework. FastAPI (70.04%) is second on the podium, followed by most-wanted framework React.js (69.28%), Vue.js (64.41%), and Express (62.07%).\r\n\r\nThree of the most-loved web frameworks also appear in the top five highest-paid: Svelte, ASP.NET Core, and React.js.\r\n\r\nUnfortunately, none of these take the highest spot which goes to Ruby on Rails ($77,556). Svelte ($62,520) takes second place, followed by ASP.NET Core ($60,744), Gatsby ($60,129), and React.js ($58,128).\r\n\r\nOur own “most impressive” award has to go to the shiny new web framework Svelte that manages to feature highly in the most-wanted, most-loved, and highest-paid lists. Given more time, it wouldn’t be surprising to see it accelerate into the most popular web frameworks.\r\n\r\nBoth professional developers and all respondents report JavaScript (64.96%) as being, by a healthy margin, their most-used language. Second place goes to HTML/CSS (56.07%), showing that web development continues to dominate.\r\n\r\nPython (48.24%) traded places with SQL (47.08%) for third-place when including all respondents but remained in fourth-place when accounting for just professional developers.\r\n\r\nImpressively, Python has retained its spot as the most-wanted language for the fifth year. Rounding out the top five are TypeScript (15.29%), JavaScript (14.59%), Go (14.54%), and Rust (14.09%).\r\n\r\nWhile in fifth place in most-wanted languages, Mozilla-founded Rust (86.98%) keeps its crown as the most-loved language for the sixth consecutive year. Behind Rust are Clojure (81.12%), TypeScript (72.73%), Elixir (72.11%), and Julia (70.69%).\r\n\r\nPython (67.83%) just falls out of the top five most-loved programming languages.\r\n\r\nCoding in a language you love can also pay off, with both Clojure and Elixir appearing in the top five highest paid languages. In fact, Clojure developers are, on average, raking in the biggest annual salaries ($95,000).\r\n\r\nThat salary is over $14k more than the second-highest that goes to F# ($81,037) developers, followed by Elixir ($80,077) and Erlang ($80,077) which tie third-place, Perl and Ruby that tie fourth ($80,000), and Scala ($77,832) which completes the top five.\r\n\r\nNotably, Perl was the highest paid language last year.\r\n\r\nThe most commonly-used database is MySQL (50.18%), followed by PostgreSQL (40.42%), SQLite (32.18%), MongoDB (27.7%), and Microsoft SQL Server (26.87%).\r\n\r\nWhile there are no databases that developers overwhelmingly “love” when compared to languages, Redis comes out on top (70.71%) and is closely followed by PostgreSQL (70.40%) that represents the first commonly-used database to also appear in the loved list.\r\n\r\nMongoDB (60.28%) – another commonly-used database – takes third place. Elasticsearch (56.70%) and Firebase (56.22%) complete the top five.\r\n\r\nDevelopers working with DynamoDB ($80,936) are making the biggest bucks, followed by Elasticsearch ($67,021) and Cassandra ($64,090). Developers’ most-loved database, Redis ($64,548), takes fourth place. Finally, IBM DB2 ($64,044) rounds off the top five.\r\n\r\nBy a wide margin, AWS (54.22%) unsurprisingly remains the cloud platform to beat in usage. However, Google Cloud (31.05%) and Microsoft Azure (30.77%) made substantial gains over last year.\r\n\r\nHowever, if we’re talking about wide margins, nothing comes close to the margin Visual Studio (VS Code in particular) enjoys in IDE usage. Visual Studio Code leads the pack (71.06%), followed by Visual Studio (33.03%), Notepad++ (29.71%), IntelliJ (28.74%), and then Vim (24.19%).\r\n\r\nYou can delve into the full results of Stack Overflow’s latest survey here.', 1, '2023-01-20 14:20:50', 70, 'king.jpg');

-- --------------------------------------------------------

--
-- Table structure for table `articles_categories`
--

CREATE TABLE `articles_categories` (
  `id` int NOT NULL,
  `title` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Dumping data for table `articles_categories`
--

INSERT INTO `articles_categories` (`id`, `title`) VALUES
(1, 'Безпека'),
(2, 'Програмування'),
(3, 'Lifestyle'),
(4, 'Музика'),
(5, 'Саморозвиток'),
(6, 'Спорт'),
(7, 'Fruit');

-- --------------------------------------------------------

--
-- Table structure for table `comments`
--

CREATE TABLE `comments` (
  `id` int NOT NULL,
  `name` varchar(255) NOT NULL,
  `author` varchar(110) DEFAULT NULL,
  `text` text CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  `pubdate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `articles_id` int NOT NULL,
  `img` varchar(255) NOT NULL DEFAULT 'thumb.jpg'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Dumping data for table `comments`
--

INSERT INTO `comments` (`id`, `name`, `author`, `text`, `pubdate`, `articles_id`, `img`) VALUES
(1, 'Artem', 'Nick', 'What is Lorem Ipsum?\r\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.', '2023-01-24 17:19:06', 9, 'thumb.jpg'),
(2, 'hello', 'Artur', 'Why do we use it?\r\nIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using \'Content here, content here\', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for \'lorem ipsum\' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n\r\n', '2023-01-24 17:20:40', 4, 'thumb.jpg'),
(3, 'Nazar', 'Oudge', 'Hello? it`s cool!!!!!!!!!', '2023-01-24 17:22:43', 3, 'ava.jpeg'),
(4, 'Diana', 'Doli', 'Hello world! Text comment!', '2023-01-24 17:23:15', 6, 'ava.jpeg'),
(5, 'Fast', 'Fidje', 'TestTestTestTestTestTestT\r\nestTestTe \r\nstTestTestTestTestTestTestTes tTestTes\r\ntTestTestTestT estTestTes\r\ntTestTestTestTestTestTestTestTestTe stTestTestTestTestTestTestTest TestTestTestTestTestTestTestTestTestT estTestTest\r\n', '2023-01-24 17:23:42', 3, 'thumb.jpg'),
(6, 'Nika', 'Kinan', 'Where can I get some?\r\nThere are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don\'t look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn\'t anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.', '2023-01-24 17:24:04', 1, 'ava_girl.jpeg');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `articles`
--
ALTER TABLE `articles`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `articles_categories`
--
ALTER TABLE `articles_categories`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `articles`
--
ALTER TABLE `articles`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;

--
-- AUTO_INCREMENT for table `articles_categories`
--
ALTER TABLE `articles_categories`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT for table `comments`
--
ALTER TABLE `comments`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
